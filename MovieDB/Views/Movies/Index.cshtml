@using MovieDB.Classes;
@using MovieDB.Models;

@model IEnumerable<Movie>

@{
    ViewBag.Title = "Movies";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Add New Movie", "Create")
</p>

@using (Html.BeginForm())
{
    <br>
    <p>
        Find movie by name: @Html.TextBox("SearchTitle")
        <input type="submit" value="Search" />
    </p>
    <p>
        Find movie by description: @Html.TextBox("SearchBody")
        <input type="submit" value="Search" />
    </p>
    <br>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            Description
        </th>
        <th>
            @Html.ActionLink("Date added", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.AuthorSortParm })
        </th>
        <th>
           
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Utils.CutText(item.Body)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @if (item.Author != null)
            {
                @item.Author.UserName
            } else
            {
                <i>(no author)</i>
            }
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
